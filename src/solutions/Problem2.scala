package solutions

/*
* Problem 2: Even Fibonacci Numbers
*
* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*
 */
object Problem2 extends App {

  def accumulateFibsWithCondition(currentSum: Int = 0, current: Int, prev: Int, condition: Int => Boolean, maxFib: Int): Int = {
    val newSum = if (condition(current)) currentSum + current else currentSum
    if (current < maxFib) {
      accumulateFibsWithCondition(newSum, current = current + prev, prev = current, condition, maxFib)
    }
    else newSum
  }

  println(accumulateFibsWithCondition(currentSum = 0,2, prev = 1, condition = i => i %2 ==0, maxFib = 4e6.intValue()))

}
